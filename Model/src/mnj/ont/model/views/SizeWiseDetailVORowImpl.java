package mnj.ont.model.views;

import mnj.ont.model.entities.MnjBomSizeDetImpl;

import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jan 23 16:37:58 BDT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SizeWiseDetailVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        ActualQty {
            public Object get(SizeWiseDetailVORowImpl obj) {
                return obj.getActualQty();
            }

            public void put(SizeWiseDetailVORowImpl obj, Object value) {
                obj.setActualQty((Number)value);
            }
        }
        ,
        AddDeduct {
            public Object get(SizeWiseDetailVORowImpl obj) {
                return obj.getAddDeduct();
            }

            public void put(SizeWiseDetailVORowImpl obj, Object value) {
                obj.setAddDeduct((Number)value);
            }
        }
        ,
        BomRmlineId {
            public Object get(SizeWiseDetailVORowImpl obj) {
                return obj.getBomRmlineId();
            }

            public void put(SizeWiseDetailVORowImpl obj, Object value) {
                obj.setBomRmlineId((Number)value);
            }
        }
        ,
        BookingPercent {
            public Object get(SizeWiseDetailVORowImpl obj) {
                return obj.getBookingPercent();
            }

            public void put(SizeWiseDetailVORowImpl obj, Object value) {
                obj.setBookingPercent((Number)value);
            }
        }
        ,
        DetId {
            public Object get(SizeWiseDetailVORowImpl obj) {
                return obj.getDetId();
            }

            public void put(SizeWiseDetailVORowImpl obj, Object value) {
                obj.setDetId((Number)value);
            }
        }
        ,
        SizeVal {
            public Object get(SizeWiseDetailVORowImpl obj) {
                return obj.getSizeVal();
            }

            public void put(SizeWiseDetailVORowImpl obj, Object value) {
                obj.setSizeVal((String)value);
            }
        }
        ,
        SizeWiseBomReqQty {
            public Object get(SizeWiseDetailVORowImpl obj) {
                return obj.getSizeWiseBomReqQty();
            }

            public void put(SizeWiseDetailVORowImpl obj, Object value) {
                obj.setSizeWiseBomReqQty((Number)value);
            }
        }
        ,
        SizeWiseOrderQty {
            public Object get(SizeWiseDetailVORowImpl obj) {
                return obj.getSizeWiseOrderQty();
            }

            public void put(SizeWiseDetailVORowImpl obj, Object value) {
                obj.setSizeWiseOrderQty((Number)value);
            }
        }
        ,
        SizeWiseProjQty {
            public Object get(SizeWiseDetailVORowImpl obj) {
                return obj.getSizeWiseProjQty();
            }

            public void put(SizeWiseDetailVORowImpl obj, Object value) {
                obj.setSizeWiseProjQty((Number)value);
            }
        }
        ,
        Flag {
            public Object get(SizeWiseDetailVORowImpl obj) {
                return obj.getFlag();
            }

            public void put(SizeWiseDetailVORowImpl obj, Object value) {
                obj.setFlag((String)value);
            }
        }
        ,
        ActualQtyTotal {
            public Object get(SizeWiseDetailVORowImpl obj) {
                return obj.getActualQtyTotal();
            }

            public void put(SizeWiseDetailVORowImpl obj, Object value) {
                obj.setActualQtyTotal((Number)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(SizeWiseDetailVORowImpl object);

        public abstract void put(SizeWiseDetailVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int ACTUALQTY = AttributesEnum.ActualQty.index();
    public static final int ADDDEDUCT = AttributesEnum.AddDeduct.index();
    public static final int BOMRMLINEID = AttributesEnum.BomRmlineId.index();
    public static final int BOOKINGPERCENT = AttributesEnum.BookingPercent.index();
    public static final int DETID = AttributesEnum.DetId.index();
    public static final int SIZEVAL = AttributesEnum.SizeVal.index();
    public static final int SIZEWISEBOMREQQTY = AttributesEnum.SizeWiseBomReqQty.index();
    public static final int SIZEWISEORDERQTY = AttributesEnum.SizeWiseOrderQty.index();
    public static final int SIZEWISEPROJQTY = AttributesEnum.SizeWiseProjQty.index();
    public static final int FLAG = AttributesEnum.Flag.index();
    public static final int ACTUALQTYTOTAL = AttributesEnum.ActualQtyTotal.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SizeWiseDetailVORowImpl() {
    }

    /**
     * Gets MnjBomSizeDet entity object.
     * @return the MnjBomSizeDet
     */
    public MnjBomSizeDetImpl getMnjBomSizeDet() {
        return (MnjBomSizeDetImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for ACTUAL_QTY using the alias name ActualQty.
     * @return the ACTUAL_QTY
     */
    public Number getActualQty() {
        return (Number) getAttributeInternal(ACTUALQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTUAL_QTY using the alias name ActualQty.
     * @param value value to set the ACTUAL_QTY
     */
    public void setActualQty(Number value) {
        setAttributeInternal(ACTUALQTY, value);
    }

    /**
     * Gets the attribute value for ADD_DEDUCT using the alias name AddDeduct.
     * @return the ADD_DEDUCT
     */
    public Number getAddDeduct() {
        return (Number) getAttributeInternal(ADDDEDUCT);
    }

    /**
     * Sets <code>value</code> as attribute value for ADD_DEDUCT using the alias name AddDeduct.
     * @param value value to set the ADD_DEDUCT
     */
    public void setAddDeduct(Number value) {
        setAttributeInternal(ADDDEDUCT, value);
    }

    /**
     * Gets the attribute value for BOM_RMLINE_ID using the alias name BomRmlineId.
     * @return the BOM_RMLINE_ID
     */
    public Number getBomRmlineId() {
        return (Number) getAttributeInternal(BOMRMLINEID);
    }

    /**
     * Sets <code>value</code> as attribute value for BOM_RMLINE_ID using the alias name BomRmlineId.
     * @param value value to set the BOM_RMLINE_ID
     */
    public void setBomRmlineId(Number value) {
        setAttributeInternal(BOMRMLINEID, value);
    }

    /**
     * Gets the attribute value for BOOKING_PERCENT using the alias name BookingPercent.
     * @return the BOOKING_PERCENT
     */
    public Number getBookingPercent() {
        return (Number) getAttributeInternal(BOOKINGPERCENT);
    }

    /**
     * Sets <code>value</code> as attribute value for BOOKING_PERCENT using the alias name BookingPercent.
     * @param value value to set the BOOKING_PERCENT
     */
    public void setBookingPercent(Number value) {
        setAttributeInternal(BOOKINGPERCENT, value);
    }

    /**
     * Gets the attribute value for DET_ID using the alias name DetId.
     * @return the DET_ID
     */
    public Number getDetId() {
        return (Number) getAttributeInternal(DETID);
    }

    /**
     * Sets <code>value</code> as attribute value for DET_ID using the alias name DetId.
     * @param value value to set the DET_ID
     */
    public void setDetId(Number value) {
        setAttributeInternal(DETID, value);
    }

    /**
     * Gets the attribute value for SIZE_VAL using the alias name SizeVal.
     * @return the SIZE_VAL
     */
    public String getSizeVal() {
        return (String) getAttributeInternal(SIZEVAL);
    }

    /**
     * Sets <code>value</code> as attribute value for SIZE_VAL using the alias name SizeVal.
     * @param value value to set the SIZE_VAL
     */
    public void setSizeVal(String value) {
        setAttributeInternal(SIZEVAL, value);
    }

    /**
     * Gets the attribute value for SIZE_WISE_BOM_REQ_QTY using the alias name SizeWiseBomReqQty.
     * @return the SIZE_WISE_BOM_REQ_QTY
     */
    public Number getSizeWiseBomReqQty() {
        return (Number) getAttributeInternal(SIZEWISEBOMREQQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for SIZE_WISE_BOM_REQ_QTY using the alias name SizeWiseBomReqQty.
     * @param value value to set the SIZE_WISE_BOM_REQ_QTY
     */
    public void setSizeWiseBomReqQty(Number value) {
        setAttributeInternal(SIZEWISEBOMREQQTY, value);
    }

    /**
     * Gets the attribute value for SIZE_WISE_ORDER_QTY using the alias name SizeWiseOrderQty.
     * @return the SIZE_WISE_ORDER_QTY
     */
    public Number getSizeWiseOrderQty() {
        return (Number) getAttributeInternal(SIZEWISEORDERQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for SIZE_WISE_ORDER_QTY using the alias name SizeWiseOrderQty.
     * @param value value to set the SIZE_WISE_ORDER_QTY
     */
    public void setSizeWiseOrderQty(Number value) {
        setAttributeInternal(SIZEWISEORDERQTY, value);
    }

    /**
     * Gets the attribute value for SIZE_WISE_PROJ_QTY using the alias name SizeWiseProjQty.
     * @return the SIZE_WISE_PROJ_QTY
     */
    public Number getSizeWiseProjQty() {
        return (Number) getAttributeInternal(SIZEWISEPROJQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for SIZE_WISE_PROJ_QTY using the alias name SizeWiseProjQty.
     * @param value value to set the SIZE_WISE_PROJ_QTY
     */
    public void setSizeWiseProjQty(Number value) {
        setAttributeInternal(SIZEWISEPROJQTY, value);
    }

    /**
     * Gets the attribute value for FLAG using the alias name Flag.
     * @return the FLAG
     */
    public String getFlag() {
        return (String) getAttributeInternal(FLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for FLAG using the alias name Flag.
     * @param value value to set the FLAG
     */
    public void setFlag(String value) {
        setAttributeInternal(FLAG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ActualQtyTotal.
     * @return the ActualQtyTotal
     */
    public Number getActualQtyTotal() {
        Number total = new Number(0);
        Number rowValue = new Number(0);
        try{
            RowSetIterator iter=getViewObject().createRowSetIterator("error");
            
            while(iter.hasNext()){
                Row row = iter.next();
                rowValue = (Number) row.getAttribute("ActualQty");
                if(rowValue != null)
                    total=total.add(rowValue);
            }
            iter.reset();
            iter.closeRowSetIterator();
                
        }catch(Exception e){
        }

        return total;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ActualQtyTotal.
     * @param value value to set the  ActualQtyTotal
     */
    public void setActualQtyTotal(Number value) {
        setAttributeInternal(ACTUALQTYTOTAL, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
