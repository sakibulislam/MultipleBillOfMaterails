package mnj.ont.model.lov.vo;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jul 15 16:26:31 PKT 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class popuplineVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        InventoryItemId {
            public Object get(popuplineVORowImpl obj) {
                return obj.getInventoryItemId();
            }

            public void put(popuplineVORowImpl obj, Object value) {
                obj.setInventoryItemId((Number)value);
            }
        }
        ,
        HeaderId {
            public Object get(popuplineVORowImpl obj) {
                return obj.getHeaderId();
            }

            public void put(popuplineVORowImpl obj, Object value) {
                obj.setHeaderId((Number)value);
            }
        }
        ,
        ObRef {
            public Object get(popuplineVORowImpl obj) {
                return obj.getObRef();
            }

            public void put(popuplineVORowImpl obj, Object value) {
                obj.setObRef((String)value);
            }
        }
        ,
        OrderedItem {
            public Object get(popuplineVORowImpl obj) {
                return obj.getOrderedItem();
            }

            public void put(popuplineVORowImpl obj, Object value) {
                obj.setOrderedItem((String)value);
            }
        }
        ,
        Description {
            public Object get(popuplineVORowImpl obj) {
                return obj.getDescription();
            }

            public void put(popuplineVORowImpl obj, Object value) {
                obj.setDescription((String)value);
            }
        }
        ,
        DcpoNo {
            public Object get(popuplineVORowImpl obj) {
                return obj.getDcpoNo();
            }

            public void put(popuplineVORowImpl obj, Object value) {
                obj.setDcpoNo((String)value);
            }
        }
        ,
        InseamQty {
            public Object get(popuplineVORowImpl obj) {
                return obj.getInseamQty();
            }

            public void put(popuplineVORowImpl obj, Object value) {
                obj.setInseamQty((Number)value);
            }
        }
        ,
        DeliveryDate {
            public Object get(popuplineVORowImpl obj) {
                return obj.getDeliveryDate();
            }

            public void put(popuplineVORowImpl obj, Object value) {
                obj.setDeliveryDate((Date)value);
            }
        }
        ,
        DeliveryTerm {
            public Object get(popuplineVORowImpl obj) {
                return obj.getDeliveryTerm();
            }

            public void put(popuplineVORowImpl obj, Object value) {
                obj.setDeliveryTerm((String)value);
            }
        }
        ,
        ShipMode {
            public Object get(popuplineVORowImpl obj) {
                return obj.getShipMode();
            }

            public void put(popuplineVORowImpl obj, Object value) {
                obj.setShipMode((String)value);
            }
        }
        ,
        Country {
            public Object get(popuplineVORowImpl obj) {
                return obj.getCountry();
            }

            public void put(popuplineVORowImpl obj, Object value) {
                obj.setCountry((String)value);
            }
        }
        ,
        InseamSizeConcat {
            public Object get(popuplineVORowImpl obj) {
                return obj.getInseamSizeConcat();
            }

            public void put(popuplineVORowImpl obj, Object value) {
                obj.setInseamSizeConcat((String)value);
            }
        }
        ,
        SizeQty {
            public Object get(popuplineVORowImpl obj) {
                return obj.getSizeQty();
            }

            public void put(popuplineVORowImpl obj, Object value) {
                obj.setSizeQty((Number)value);
            }
        }
        ,
        Color {
            public Object get(popuplineVORowImpl obj) {
                return obj.getColor();
            }

            public void put(popuplineVORowImpl obj, Object value) {
                obj.setColor((String)value);
            }
        }
        ,
        BomId {
            public Object get(popuplineVORowImpl obj) {
                return obj.getBomId();
            }

            public void put(popuplineVORowImpl obj, Object value) {
                obj.setBomId((Number)value);
            }
        }
        ,
        Inseem {
            public Object get(popuplineVORowImpl obj) {
                return obj.getInseem();
            }

            public void put(popuplineVORowImpl obj, Object value) {
                obj.setInseem((String)value);
            }
        }
        ,
        SizeId {
            public Object get(popuplineVORowImpl obj) {
                return obj.getSizeId();
            }

            public void put(popuplineVORowImpl obj, Object value) {
                obj.setSizeId((Number)value);
            }
        }
        ,
        SizeValue {
            public Object get(popuplineVORowImpl obj) {
                return obj.getSizeValue();
            }

            public void put(popuplineVORowImpl obj, Object value) {
                obj.setSizeValue((Number)value);
            }
        }
        ,
        Multiselect {
            public Object get(popuplineVORowImpl obj) {
                return obj.getMultiselect();
            }

            public void put(popuplineVORowImpl obj, Object value) {
                obj.setMultiselect((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(popuplineVORowImpl object);

        public abstract void put(popuplineVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int INVENTORYITEMID = AttributesEnum.InventoryItemId.index();
    public static final int HEADERID = AttributesEnum.HeaderId.index();
    public static final int OBREF = AttributesEnum.ObRef.index();
    public static final int ORDEREDITEM = AttributesEnum.OrderedItem.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int DCPONO = AttributesEnum.DcpoNo.index();
    public static final int INSEAMQTY = AttributesEnum.InseamQty.index();
    public static final int DELIVERYDATE = AttributesEnum.DeliveryDate.index();
    public static final int DELIVERYTERM = AttributesEnum.DeliveryTerm.index();
    public static final int SHIPMODE = AttributesEnum.ShipMode.index();
    public static final int COUNTRY = AttributesEnum.Country.index();
    public static final int INSEAMSIZECONCAT = AttributesEnum.InseamSizeConcat.index();
    public static final int SIZEQTY = AttributesEnum.SizeQty.index();
    public static final int COLOR = AttributesEnum.Color.index();
    public static final int BOMID = AttributesEnum.BomId.index();
    public static final int INSEEM = AttributesEnum.Inseem.index();
    public static final int SIZEID = AttributesEnum.SizeId.index();
    public static final int SIZEVALUE = AttributesEnum.SizeValue.index();
    public static final int MULTISELECT = AttributesEnum.Multiselect.index();

    /**
     * This is the default constructor (do not remove).
     */
    public popuplineVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute HeaderId.
     * @return the HeaderId
     */
    public Number getHeaderId() {
        return (Number) getAttributeInternal(HEADERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute HeaderId.
     * @param value value to set the  HeaderId
     */
    public void setHeaderId(Number value) {
        setAttributeInternal(HEADERID, value);
    }


    /**
     * Gets the attribute value for the calculated attribute InventoryItemId.
     * @return the InventoryItemId
     */
    public Number getInventoryItemId() {
        return (Number) getAttributeInternal(INVENTORYITEMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute InventoryItemId.
     * @param value value to set the  InventoryItemId
     */
    public void setInventoryItemId(Number value) {
        setAttributeInternal(INVENTORYITEMID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrderedItem.
     * @return the OrderedItem
     */
    public String getOrderedItem() {
        return (String) getAttributeInternal(ORDEREDITEM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrderedItem.
     * @param value value to set the  OrderedItem
     */
    public void setOrderedItem(String value) {
        setAttributeInternal(ORDEREDITEM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Description.
     * @return the Description
     */
    public String getDescription() {
        return (String) getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Description.
     * @param value value to set the  Description
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Inseem.
     * @return the Inseem
     */
    public String getInseem() {
        return (String) getAttributeInternal(INSEEM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Inseem.
     * @param value value to set the  Inseem
     */
    public void setInseem(String value) {
        setAttributeInternal(INSEEM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SizeId.
     * @return the SizeId
     */
    public Number getSizeId() {
        return (Number) getAttributeInternal(SIZEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SizeId.
     * @param value value to set the  SizeId
     */
    public void setSizeId(Number value) {
        setAttributeInternal(SIZEID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ObRef.
     * @return the ObRef
     */
    public String getObRef() {
        return (String) getAttributeInternal(OBREF);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ObRef.
     * @param value value to set the  ObRef
     */
    public void setObRef(String value) {
        setAttributeInternal(OBREF, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DcpoNo.
     * @return the DcpoNo
     */
    public String getDcpoNo() {
        return (String) getAttributeInternal(DCPONO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DcpoNo.
     * @param value value to set the  DcpoNo
     */
    public void setDcpoNo(String value) {
        setAttributeInternal(DCPONO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute InseamQty.
     * @return the InseamQty
     */
    public Number getInseamQty() {
        return (Number) getAttributeInternal(INSEAMQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute InseamQty.
     * @param value value to set the  InseamQty
     */
    public void setInseamQty(Number value) {
        setAttributeInternal(INSEAMQTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DeliveryDate.
     * @return the DeliveryDate
     */
    public Date getDeliveryDate() {
        return (Date) getAttributeInternal(DELIVERYDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DeliveryDate.
     * @param value value to set the  DeliveryDate
     */
    public void setDeliveryDate(Date value) {
        setAttributeInternal(DELIVERYDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DeliveryTerm.
     * @return the DeliveryTerm
     */
    public String getDeliveryTerm() {
        return (String) getAttributeInternal(DELIVERYTERM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DeliveryTerm.
     * @param value value to set the  DeliveryTerm
     */
    public void setDeliveryTerm(String value) {
        setAttributeInternal(DELIVERYTERM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ShipMode.
     * @return the ShipMode
     */
    public String getShipMode() {
        return (String) getAttributeInternal(SHIPMODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ShipMode.
     * @param value value to set the  ShipMode
     */
    public void setShipMode(String value) {
        setAttributeInternal(SHIPMODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Country.
     * @return the Country
     */
    public String getCountry() {
        return (String) getAttributeInternal(COUNTRY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Country.
     * @param value value to set the  Country
     */
    public void setCountry(String value) {
        setAttributeInternal(COUNTRY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute InseamSizeConcat.
     * @return the InseamSizeConcat
     */
    public String getInseamSizeConcat() {
        return (String) getAttributeInternal(INSEAMSIZECONCAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute InseamSizeConcat.
     * @param value value to set the  InseamSizeConcat
     */
    public void setInseamSizeConcat(String value) {
        setAttributeInternal(INSEAMSIZECONCAT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SizeQty.
     * @return the SizeQty
     */
    public Number getSizeQty() {
        return (Number) getAttributeInternal(SIZEQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SizeQty.
     * @param value value to set the  SizeQty
     */
    public void setSizeQty(Number value) {
        setAttributeInternal(SIZEQTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SizeValue.
     * @return the SizeValue
     */
    public Number getSizeValue() {
        return (Number) getAttributeInternal(SIZEVALUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SizeValue.
     * @param value value to set the  SizeValue
     */
    public void setSizeValue(Number value) {
        setAttributeInternal(SIZEVALUE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Color.
     * @return the Color
     */
    public String getColor() {
        return (String) getAttributeInternal(COLOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Color.
     * @param value value to set the  Color
     */
    public void setColor(String value) {
        setAttributeInternal(COLOR, value);
    }


    /**
     * Gets the attribute value for the calculated attribute BomId.
     * @return the BomId
     */
    public Number getBomId() {
        return (Number) getAttributeInternal(BOMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BomId.
     * @param value value to set the  BomId
     */
    public void setBomId(Number value) {
        setAttributeInternal(BOMID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Multiselect.
     * @return the Multiselect
     */
    public String getMultiselect() {
        return (String) getAttributeInternal(MULTISELECT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Multiselect.
     * @param value value to set the  Multiselect
     */
    public void setMultiselect(String value) {
        setAttributeInternal(MULTISELECT, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
