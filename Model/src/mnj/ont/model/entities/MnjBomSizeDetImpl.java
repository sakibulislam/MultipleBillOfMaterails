package mnj.ont.model.entities;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun May 01 13:11:00 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnjBomSizeDetImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    @Override
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        oracle.jbo.server.SequenceImpl s =new oracle.jbo.server.SequenceImpl("mnj_bom_size_det_s",getDBTransaction());
        oracle.jbo.domain.Number sVal = s.getSequenceNumber();
        setDetId(sVal);
        
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        DetId {
            public Object get(MnjBomSizeDetImpl obj) {
                return obj.getDetId();
            }

            public void put(MnjBomSizeDetImpl obj, Object value) {
                obj.setDetId((Number)value);
            }
        }
        ,
        BomRmlineId {
            public Object get(MnjBomSizeDetImpl obj) {
                return obj.getBomRmlineId();
            }

            public void put(MnjBomSizeDetImpl obj, Object value) {
                obj.setBomRmlineId((Number)value);
            }
        }
        ,
        SizeVal {
            public Object get(MnjBomSizeDetImpl obj) {
                return obj.getSizeVal();
            }

            public void put(MnjBomSizeDetImpl obj, Object value) {
                obj.setSizeVal((String)value);
            }
        }
        ,
        SizeWiseOrderQty {
            public Object get(MnjBomSizeDetImpl obj) {
                return obj.getSizeWiseOrderQty();
            }

            public void put(MnjBomSizeDetImpl obj, Object value) {
                obj.setSizeWiseOrderQty((Number)value);
            }
        }
        ,
        SizeWiseBomReqQty {
            public Object get(MnjBomSizeDetImpl obj) {
                return obj.getSizeWiseBomReqQty();
            }

            public void put(MnjBomSizeDetImpl obj, Object value) {
                obj.setSizeWiseBomReqQty((Number)value);
            }
        }
        ,
        BookingPercent {
            public Object get(MnjBomSizeDetImpl obj) {
                return obj.getBookingPercent();
            }

            public void put(MnjBomSizeDetImpl obj, Object value) {
                obj.setBookingPercent((Number)value);
            }
        }
        ,
        SizeWiseProjQty {
            public Object get(MnjBomSizeDetImpl obj) {
                return obj.getSizeWiseProjQty();
            }

            public void put(MnjBomSizeDetImpl obj, Object value) {
                obj.setSizeWiseProjQty((Number)value);
            }
        }
        ,
        AddDeduct {
            public Object get(MnjBomSizeDetImpl obj) {
                return obj.getAddDeduct();
            }

            public void put(MnjBomSizeDetImpl obj, Object value) {
                obj.setAddDeduct((Number)value);
            }
        }
        ,
        ActualQty {
            public Object get(MnjBomSizeDetImpl obj) {
                return obj.getActualQty();
            }

            public void put(MnjBomSizeDetImpl obj, Object value) {
                obj.setActualQty((Number)value);
            }
        }
        ,
        Flag {
            public Object get(MnjBomSizeDetImpl obj) {
                return obj.getFlag();
            }

            public void put(MnjBomSizeDetImpl obj, Object value) {
                obj.setFlag((String)value);
            }
        }
        ,
        CustMnjOntBomRmlineLines {
            public Object get(MnjBomSizeDetImpl obj) {
                return obj.getCustMnjOntBomRmlineLines();
            }

            public void put(MnjBomSizeDetImpl obj, Object value) {
                obj.setCustMnjOntBomRmlineLines((CustMnjOntBomRmlineLinesImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MnjBomSizeDetImpl object);

        public abstract void put(MnjBomSizeDetImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DETID = AttributesEnum.DetId.index();
    public static final int BOMRMLINEID = AttributesEnum.BomRmlineId.index();
    public static final int SIZEVAL = AttributesEnum.SizeVal.index();
    public static final int SIZEWISEORDERQTY = AttributesEnum.SizeWiseOrderQty.index();
    public static final int SIZEWISEBOMREQQTY = AttributesEnum.SizeWiseBomReqQty.index();
    public static final int BOOKINGPERCENT = AttributesEnum.BookingPercent.index();
    public static final int SIZEWISEPROJQTY = AttributesEnum.SizeWiseProjQty.index();
    public static final int ADDDEDUCT = AttributesEnum.AddDeduct.index();
    public static final int ACTUALQTY = AttributesEnum.ActualQty.index();
    public static final int FLAG = AttributesEnum.Flag.index();
    public static final int CUSTMNJONTBOMRMLINELINES = AttributesEnum.CustMnjOntBomRmlineLines.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnjBomSizeDetImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("mnj.ont.model.entities.MnjBomSizeDet");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for DetId, using the alias name DetId.
     * @return the DetId
     */
    public Number getDetId() {
        return (Number)getAttributeInternal(DETID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DetId.
     * @param value value to set the DetId
     */
    public void setDetId(Number value) {
        setAttributeInternal(DETID, value);
    }

    /**
     * Gets the attribute value for BomRmlineId, using the alias name BomRmlineId.
     * @return the BomRmlineId
     */
    public Number getBomRmlineId() {
        return (Number)getAttributeInternal(BOMRMLINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BomRmlineId.
     * @param value value to set the BomRmlineId
     */
    public void setBomRmlineId(Number value) {
        setAttributeInternal(BOMRMLINEID, value);
    }

    /**
     * Gets the attribute value for SizeVal, using the alias name SizeVal.
     * @return the SizeVal
     */
    public String getSizeVal() {
        return (String)getAttributeInternal(SIZEVAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for SizeVal.
     * @param value value to set the SizeVal
     */
    public void setSizeVal(String value) {
        setAttributeInternal(SIZEVAL, value);
    }

    /**
     * Gets the attribute value for SizeWiseOrderQty, using the alias name SizeWiseOrderQty.
     * @return the SizeWiseOrderQty
     */
    public Number getSizeWiseOrderQty() {
        return (Number)getAttributeInternal(SIZEWISEORDERQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for SizeWiseOrderQty.
     * @param value value to set the SizeWiseOrderQty
     */
    public void setSizeWiseOrderQty(Number value) {
        setAttributeInternal(SIZEWISEORDERQTY, value);
    }

    /**
     * Gets the attribute value for SizeWiseBomReqQty, using the alias name SizeWiseBomReqQty.
     * @return the SizeWiseBomReqQty
     */
    public Number getSizeWiseBomReqQty() {
        return (Number)getAttributeInternal(SIZEWISEBOMREQQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for SizeWiseBomReqQty.
     * @param value value to set the SizeWiseBomReqQty
     */
    public void setSizeWiseBomReqQty(Number value) {
        setAttributeInternal(SIZEWISEBOMREQQTY, value);
    }

    /**
     * Gets the attribute value for BookingPercent, using the alias name BookingPercent.
     * @return the BookingPercent
     */
    public Number getBookingPercent() {
        return (Number)getAttributeInternal(BOOKINGPERCENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for BookingPercent.
     * @param value value to set the BookingPercent
     */
    public void setBookingPercent(Number value) {
        setAttributeInternal(BOOKINGPERCENT, value);
    }

    /**
     * Gets the attribute value for SizeWiseProjQty, using the alias name SizeWiseProjQty.
     * @return the SizeWiseProjQty
     */
    public Number getSizeWiseProjQty() {
        return (Number)getAttributeInternal(SIZEWISEPROJQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for SizeWiseProjQty.
     * @param value value to set the SizeWiseProjQty
     */
    public void setSizeWiseProjQty(Number value) {
        setAttributeInternal(SIZEWISEPROJQTY, value);
    }

    /**
     * Gets the attribute value for AddDeduct, using the alias name AddDeduct.
     * @return the AddDeduct
     */
    public Number getAddDeduct() {
        return (Number)getAttributeInternal(ADDDEDUCT);
    }

    /**
     * Sets <code>value</code> as the attribute value for AddDeduct.
     * @param value value to set the AddDeduct
     */
    public void setAddDeduct(Number value) {
        setAttributeInternal(ADDDEDUCT, value);
    }

    /**
     * Gets the attribute value for ActualQty, using the alias name ActualQty.
     * @return the ActualQty
     */
    public Number getActualQty() {
        return (Number)getAttributeInternal(ACTUALQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActualQty.
     * @param value value to set the ActualQty
     */
    public void setActualQty(Number value) {
        setAttributeInternal(ACTUALQTY, value);
    }

    /**
     * Gets the attribute value for Flag, using the alias name Flag.
     * @return the Flag
     */
    public String getFlag() {
        return (String)getAttributeInternal(FLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for Flag.
     * @param value value to set the Flag
     */
    public void setFlag(String value) {
        setAttributeInternal(FLAG, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity CustMnjOntBomRmlineLinesImpl.
     */
    public CustMnjOntBomRmlineLinesImpl getCustMnjOntBomRmlineLines() {
        return (CustMnjOntBomRmlineLinesImpl)getAttributeInternal(CUSTMNJONTBOMRMLINELINES);
    }

    /**
     * Sets <code>value</code> as the associated entity CustMnjOntBomRmlineLinesImpl.
     */
    public void setCustMnjOntBomRmlineLines(CustMnjOntBomRmlineLinesImpl value) {
        setAttributeInternal(CUSTMNJONTBOMRMLINELINES, value);
    }

    /**
     * @param detId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number detId) {
        return new Key(new Object[]{detId});
    }


}
